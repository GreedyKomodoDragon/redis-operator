apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "redis-operator.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "redis-operator.labels" . | nindent 4 }}
    control-plane: controller-manager
    app.kubernetes.io/component: manager
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "redis-operator.selectorLabels" . | nindent 6 }}
      control-plane: controller-manager
  template:
    metadata:
      labels:
        {{- include "redis-operator.selectorLabels" . | nindent 8 }}
        control-plane: controller-manager
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "redis-operator.serviceAccountName" . }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with .Values.dnsPolicy }}
      dnsPolicy: {{ . }}
      {{- end }}
      {{- with .Values.dnsConfig }}
      dnsConfig:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      securityContext:
        runAsNonRoot: true
        {{- if .Values.operator.securityContext }}
        {{- toYaml .Values.operator.securityContext | nindent 8 }}
        {{- end }}
      containers:
      - name: manager
        image: {{ include "redis-operator.image" . }}
        imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
        args:
        {{- if .Values.leaderElection.enabled }}
        - --leader-elect
        {{- end }}
        {{- if .Values.metrics.enabled }}
        - --metrics-bind-address=0.0.0.0:{{ .Values.metrics.service.port }}
        {{- else }}
        - --metrics-bind-address=0
        {{- end }}
        {{- if .Values.webhook.enabled }}
        - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
        {{- end }}
        command:
        - /manager
        env:
        - name: WATCH_NAMESPACE
          value: ""
        {{- with .Values.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        {{- if .Values.metrics.enabled }}
        - containerPort: {{ .Values.metrics.service.port }}
          name: metrics
          protocol: TCP
        {{- end }}
        {{- if .Values.webhook.enabled }}
        - containerPort: {{ .Values.webhook.service.port }}
          name: webhook-server
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.operator.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.operator.securityContext | nindent 10 }}
        {{- with .Values.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.operator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
